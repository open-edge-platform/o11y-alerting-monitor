// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"time"

	openapiTypes "github.com/oapi-codegen/runtime/types"
)

// Defines values for AlertStatusState.
const (
	Active     AlertStatusState = "active"
	Resolved   AlertStatusState = "resolved"
	Suppressed AlertStatusState = "suppressed"
)

// Defines values for ServiceStatusState.
const (
	Failed ServiceStatusState = "failed"
	Ready  ServiceStatusState = "ready"
)

// Defines values for StateDefinition.
const (
	Applied  StateDefinition = "applied"
	Error    StateDefinition = "error"
	Modified StateDefinition = "modified"
	New      StateDefinition = "new"
	Pending  StateDefinition = "pending"
)

// Alert defines model for Alert.
type Alert struct {
	AlertDefinitionId *openapiTypes.UUID `json:"alertDefinitionId,omitempty"`
	Annotations       *map[string]string `json:"annotations,omitempty"`
	EndsAt            *time.Time         `json:"endsAt,omitempty"`
	Fingerprint       *string            `json:"fingerprint,omitempty"`
	Labels            *map[string]string `json:"labels,omitempty"`
	StartsAt          *time.Time         `json:"startsAt,omitempty"`
	Status            *struct {
		State *AlertStatusState `json:"state,omitempty"`
	} `json:"status,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// AlertStatusState defines model for Alert.Status.State.
type AlertStatusState string

// AlertDefinition defines model for AlertDefinition.
type AlertDefinition struct {
	Id      *openapiTypes.UUID `json:"id,omitempty"`
	Name    *string            `json:"name,omitempty"`
	State   *StateDefinition   `json:"state,omitempty"`
	Values  *map[string]string `json:"values,omitempty"`
	Version *int               `json:"version,omitempty"`
}

// AlertDefinitionList defines model for AlertDefinitionList.
type AlertDefinitionList struct {
	AlertDefinitions *[]AlertDefinition `json:"alertDefinitions,omitempty"`
}

// AlertDefinitionTemplate defines model for AlertDefinitionTemplate.
type AlertDefinitionTemplate struct {
	Alert       *string            `json:"alert,omitempty"`
	Annotations *map[string]string `json:"annotations,omitempty"`
	Expr        *string            `json:"expr,omitempty"`
	For         *string            `json:"for,omitempty"`
	Labels      *map[string]string `json:"labels,omitempty"`
}

// AlertList defines model for AlertList.
type AlertList struct {
	Alerts *[]Alert `json:"alerts,omitempty"`
}

// Email defines model for Email.
type Email = string

// EmailConfig defines model for EmailConfig.
type EmailConfig struct {
	From       *Email  `json:"from,omitempty"`
	MailServer *string `json:"mailServer,omitempty"`
	To         *struct {
		Allowed *EmailRecipientList `json:"allowed,omitempty"`
		Enabled *EmailRecipientList `json:"enabled,omitempty"`
	} `json:"to,omitempty"`
}

// EmailConfigTo defines model for EmailConfigTo.
type EmailConfigTo struct {
	To struct {
		Enabled EmailRecipientList `json:"enabled"`
	} `json:"to"`
}

// EmailRecipientList defines model for EmailRecipientList.
type EmailRecipientList = []Email

// HttpError defines model for HttpError.
type HttpError struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

// Receiver defines model for Receiver.
type Receiver struct {
	EmailConfig *EmailConfig       `json:"emailConfig,omitempty"`
	Id          *openapiTypes.UUID `json:"id,omitempty"`
	State       *StateDefinition   `json:"state,omitempty"`
	Version     *int               `json:"version,omitempty"`
}

// ReceiverList defines model for ReceiverList.
type ReceiverList struct {
	Receivers *[]Receiver `json:"receivers,omitempty"`
}

// ServiceStatus defines model for ServiceStatus.
type ServiceStatus struct {
	State ServiceStatusState `json:"state"`
}

// ServiceStatusState defines model for ServiceStatus.State.
type ServiceStatusState string

// StateDefinition defines model for StateDefinition.
type StateDefinition string

// ActiveAlertsQueryFilter defines model for activeAlertsQueryFilter.
type ActiveAlertsQueryFilter = bool

// AlertDefinitionId defines model for alertDefinitionId.
type AlertDefinitionId = openapiTypes.UUID

// AlertsQueryFilter defines model for alertsQueryFilter.
type AlertsQueryFilter = string

// AppQueryFilter defines model for appQueryFilter.
type AppQueryFilter = string

// ClusterQueryFilter defines model for clusterQueryFilter.
type ClusterQueryFilter = string

// HostQueryFilter defines model for hostQueryFilter.
type HostQueryFilter = string

// ReceiverId defines model for receiverId.
type ReceiverId = openapiTypes.UUID

// RenderedTemplateQueryParam defines model for renderedTemplateQueryParam.
type RenderedTemplateQueryParam = bool

// SuppressedAlertsQueryFilter defines model for suppressedAlertsQueryFilter.
type SuppressedAlertsQueryFilter = bool

// N400 defines model for 400.
type N400 = HttpError

// N404 defines model for 404.
type N404 = HttpError

// N500 defines model for 500.
type N500 = HttpError

// N503 defines model for 503.
type N503 = HttpError

// GetProjectAlertsParams defines parameters for GetProjectAlerts.
type GetProjectAlertsParams struct {
	// Alert Filters the alert definitions by name
	Alert *AlertsQueryFilter `form:"alert,omitempty" json:"alert,omitempty"`

	// Host Filters the alerts by Host ID
	Host *HostQueryFilter `form:"host,omitempty" json:"host,omitempty"`

	// Cluster Filters the alerts by cluster ID
	Cluster *ClusterQueryFilter `form:"cluster,omitempty" json:"cluster,omitempty"`

	// App Filters the alerts by application or deployment ID
	App *AppQueryFilter `form:"app,omitempty" json:"app,omitempty"`

	// Active Shows active alerts
	Active *ActiveAlertsQueryFilter `form:"active,omitempty" json:"active,omitempty"`

	// Suppressed Shows suppressed alerts
	Suppressed *SuppressedAlertsQueryFilter `form:"suppressed,omitempty" json:"suppressed,omitempty"`
}

// PatchProjectAlertDefinitionJSONBody defines parameters for PatchProjectAlertDefinition.
type PatchProjectAlertDefinitionJSONBody struct {
	Values *struct {
		Duration  *string `json:"duration,omitempty"`
		Enabled   *string `json:"enabled,omitempty"`
		Threshold *string `json:"threshold,omitempty"`
	} `json:"values,omitempty"`
}

// GetProjectAlertDefinitionRuleParams defines parameters for GetProjectAlertDefinitionRule.
type GetProjectAlertDefinitionRuleParams struct {
	// Rendered Specifies if template values will be rendered
	Rendered *RenderedTemplateQueryParam `form:"rendered,omitempty" json:"rendered,omitempty"`
}

// PatchProjectAlertReceiverJSONBody defines parameters for PatchProjectAlertReceiver.
type PatchProjectAlertReceiverJSONBody struct {
	EmailConfig EmailConfigTo `json:"emailConfig"`
}

// PatchProjectAlertDefinitionJSONRequestBody defines body for PatchProjectAlertDefinition for application/json ContentType.
type PatchProjectAlertDefinitionJSONRequestBody PatchProjectAlertDefinitionJSONBody

// PatchProjectAlertReceiverJSONRequestBody defines body for PatchProjectAlertReceiver for application/json ContentType.
type PatchProjectAlertReceiverJSONRequestBody PatchProjectAlertReceiverJSONBody
